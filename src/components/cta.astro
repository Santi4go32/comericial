---
import { getLangFromUrl,useTranslation } from "i18n/utils";
import { Picture } from "astro:assets";
import tel from "assets/tel.png";

const lang = getLangFromUrl(Astro.url);
const t = useTranslation(lang);


const numeros = [
  {
    numero: "cta.subtitle1",
    description: "cta.description1",
  },
  {
    numero: "cta.subtitle3",
    senc: "cta.subtitle31",
    description: "cta.description3",
  },
  {
    numero: "cta.subtitle2",
    description: "cta.description2",
  },
  {
    numero: "cta.subtitle4",
    senc: "cta.subtitle41",
    description: "cta.description4",
  },
];
---
<div class="w-screen relative left-1/2 right-1/2 -ml-[50vw] -mr-[50vw] bg-transparent text-[#0E1B4D] h-auto lg:h-72 xl:h-96 flex items-center justify-center md:flex">
  <div class="relative flex w-full lg:max-w-screen-xl h-full">

    <div class="relative flex-grow py-8 rounded-lg flex flex-col items-center justify-center">
      
      <p class="text-center text-4xl lg:text-5xl mb-16 font-medium fade-up">{t('cta.title')}</p>

      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8 lg:gap-16 items-start w-full">
        {numeros.map((item) => (
          <div class="flex flex-col items-center fade-up">
            <div class="w-full h-auto flex flex-row items-center justify-center text-center text-4xl lg:text-5xl font-base">
              <p class="whitespace-nowrap number" data-target={t(item.numero as 'cta.subtitle1')}>
                +0
                {item.senc && (
                  <p class="whitespace-nowrap ml-2">{t(item.senc as 'cta.subtitle31')}</p>
                )}
              </p>
            </div>

            <p class="mt-2 whitespace-nowrap text-base text-center">
              {t(item.description as 'cta.description1')}
            </p>
          </div>
        ))}
      </div>
    </div>
  </div>
</div>


<style>

.number {
  transition: all 1s ease-out;
}
</style>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const counters = document.querySelectorAll('.number');
    const speed = 1500;

    counters.forEach(counter => {
      const updateCount = () => {
        const targetAttr = counter?.getAttribute('data-target');
        const target = targetAttr ? +targetAttr : 0;
        const count = +(counter as HTMLElement).innerText.replace('+', '');
        const increment = target / (speed / 100);

        if (count < target) {
          (counter as HTMLElement).innerText = `+${Math.ceil(count + increment)}`;
          setTimeout(updateCount, 100);
        } else {
          (counter as HTMLElement).innerText = `+${target}`;
        }
      };

      updateCount();
    });
  });
</script>







